#include<iostream>
#include<string>
using namespace std;

class Test
{
	int a;
	int b;
	int c;

public:
	Test(int a, int b, int c)
	{
		this->a = a;
		this->b = b;
		this->c = c;
	}
	void setA(int a) { this->a = a; }
};

/*
this nedir? obyektin adresini saxlayan pointerdir
this esasen konstruktorlarda istifade olunur
eger konstuktorun parametrlerinin adlari class-in adlari
ile eyni olarsa, o zaman duzgun yerleshdirme aparmaq ucun
this pointerinden istifade olunur

bundan elave, her bir method cagirildiqda, onun daxiline
gonderilen parametrlerden elave obyektin adresi de gonderilir
sadece biz onu ozumuz qeyd etmirik, compiler bizim evezimize
bunu edir, ve hemin pointerin adi (this) olur
*/

class MyClass
{
	int _a;
	int _b;
	int _c;
public:
	MyClass() { _a = 1; _b = 2; _c = 3; }
	void setA(int a) { _a = a; }
	void setB(int b) { _b = b; }
	void setC(int c) { _c = c; }
	int getA() { return _a; }
	int getB() { return _b; }
	int getC() { return _c; }
};

//void setA(MyClass* obj, int a)
//{
//	obj->_a = a;
//}
//
//int getA(MyClass* obj)
//{
//	return obj->_a;
//}

class Num
{
	static int s_id; // static ID
	int id{};
	int data{};

public:
	Num() // default constructor
	{
		this->id = s_id++;
		this->data = 0;
	}

	Num(int data) // parametrli constructor
	{
		this->id = s_id++;
		this->data = data;
	}

	int getData() { return data; }
	int getID() { return id; }
	void setData(int data) { this->data = data; }
};

int Num::s_id = 1;

int main()
{
	Num nums[10]
	{
		Num(111),
		Num(111),
		Num(111),
		Num(111),
		Num(111),
		Num(111),
		Num(111),
		Num(111),
		Num(111),
		Num(111)
	};
	for (int i = 0; i < 10; i++)
	{
		cout << nums[i].getID() << "\t" << nums[i].getData() << endl;
	}

	//int i = 123;
	//string str = to_string(i);


	//Num nums[10] = {};

}

/*
_	_
_	_
_	_
_	_
_	_
_	_
_	_
_	_
_	_
_	_
*/