#include <iostream>
using namespace std;

//class MyClass

//{
//public:
//	MyClass() : _data(0) {}
//	MyClass(int data)
//	{
//		_data = data;
//	}
//	//MyClass(const MyClass& my)
//	//{
//	//	_data = my._data;
//	//}
//
//	MyClass& operator=(const MyClass& other)
//	{
//		cout << "Assignment operator's work!\n";
//		return *this;
//	}
//
//	MyClass(const MyClass& my)
//	{
//		_data = my._data;
//	}
//
//	void print()
//	{
//		cout << _data << endl;
//	}
//	void setData(int data) { _data = data; }
//	int getData() { return _data; }
//
//private:
//	int _data{};
//};
//
//MyClass func()
//{
//	MyClass my;
//	return my;			// 00AABBCC (4byte)
//}
//
//void func2(const MyClass obj)
//{
//
//}

class String
{

};

class Test
{
	mutable int _count{};
	int _data{};

public:
	Test() { }
	Test(int data) : _data(data) {}

	void setData(int data)
	{
		_data = data;
	}

	int getData() { return _data; }

	int getData () const
	{
		_count++;				// 
		return _data;
	}

	int getCount() const
	{
		return _count;
	}
};

int main()
{
	Test t1;
	//const Test t2;
	//t1.setData(123);
	//t2.getData();
	//t2.getData();
	//t2.getData();
	//t2.getData();
	//t2.getData();

	//cout << t2.getCount();

	//t1.getData();
	//t1.getData();
	//t1.getData();
	//t1.getData();
	//t1.getData();

	//cout << t1.getCount() << endl;
}

//MyClass my1;
//my1.setData(1230);
//MyClass my2(my1); // 1
//cout << my2.getData() << endl;

//func2(my1);

	//MyClass(const MyClass& my)
	//{
	//	_data = my._data;
	//}

/*
Neye gore copy constructorun daxiline object by value yox,
by reference gonderilir?
2 sebeb
*/